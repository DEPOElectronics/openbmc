diff -ru a/bmc_health_config.json b/bmc_health_config.json
--- a/bmc_health_config.json	2021-08-25 00:05:43.519234391 +0300
+++ b/bmc_health_config.json	2021-09-03 22:57:14.278916631 +0300
@@ -1,5 +1,5 @@
 {
-  "CPU" : {
+  "BMC_SoC" : {
     "Frequency" : 1,
     "Window_size": 120,
     "Threshold":
@@ -18,20 +18,26 @@
         }
     }
   },
-  "Memory" : {
+  "BMC_RAM" : {
     "Frequency" : 1,
     "Window_size": 120,
     "Threshold":
     {
         "Critical":
         {
-            "Value": 85.0,
+            "Value": 90.0,
             "Log": true,
             "Target": "reboot.target"
-        }
+        },
+        "Warning":
+        {
+          "Value": 80.0,
+          "Log": false,
+          "Target": "systemd unit file"
+        }
     }
   },
-  "Storage_RW" : {
+  "BMC_Storage_RW" : {
     "Path" : "/run/initramfs/rw",
     "Frequency" : 1,
     "Window_size": 120,
@@ -39,10 +45,16 @@
     {
         "Critical":
         {
-            "Value": 85.0,
+            "Value": 90.0,
             "Log": true,
             "Target": "reboot.target"
-        }
+        },
+        "Warning":
+        {
+          "Value": 80.0,
+          "Log": false,
+          "Target": "systemd unit file"
+        }
     }
   }
 }
diff -ru a/healthMonitor.cpp b/healthMonitor.cpp
--- a/healthMonitor.cpp	2021-08-25 00:05:43.519234391 +0300
+++ b/healthMonitor.cpp	2021-09-03 22:54:59.882918111 +0300
@@ -202,12 +202,12 @@
     return usedPercentage;
 }
 
-constexpr auto storage = "Storage";
-constexpr auto inode = "Inode";
+constexpr auto storage = "BMC_Storage";
+constexpr auto inode = "BMC_Inode";
 /** Map of read function for each health sensors supported */
 const std::map<std::string, std::function<double(std::string path)>>
-    readSensors = {{"CPU", readCPUUtilization},
-                   {"Memory", readMemoryUtilization},
+    readSensors = {{"BMC_SoC", readCPUUtilization},
+                   {"BMC_RAM", readMemoryUtilization},
                    {storage, readStorageUtilization},
                    {inode, readInodeUtilization}};
 
